# Prompt

autoload colors && colors
#autoload -U zgitinit && zgitinit

init_prompt () {
	PROMPT="\$(left_prompt) "
	RPROMPT="[\$(right_prompt)]"
}

left_prompt () {
    local output="%{$fg[white]%}%c/%{$reset_color%}"
    echo $output
}

right_prompt () {
    output=($(zle_mode) $(git_status) $(rvm_status) $(timestamp))
    print ${(j" ")output}
}


# [± branch-merging ruby-1.9.3-p125@nyx]
git_status () {
    local repo_status=""
    local repo_path="`git rev-parse --git-dir 2>/dev/null`"
    
    if [[ $repo_path != '' && $repo_path != '~' && $repo_path != "$HOME/.git" ]]; then
        if [[ $repo_path != "." && `git ls-files -m` != "" ]]; then
            # Dirty
            repo_status+="%{$fg[red]%}±%{$reset_color%} "
        else
            repo_status+="± "
        fi

        # branch
        repo_status+="%{$fg[white]%}`git symbolic-ref -q HEAD | sed 's/refs\/heads\///'`%{$reset_color%}"

        if [[ -e "$repo_path/BISECT_LOG" ]]; then
            repo_status+="+bisect"
        elif [[ -e "$repo_path/MERGE_HEAD" ]]; then
            repo_status+="+merge"
        elif [[ -e "$repo_path/rebase" || -e "$repo_path/rebase-apply" || -e "$repo_path/rebase-merge" || -e "$repo_path/../.dotest" ]]; then
            repo_status+="+rebase"
        fi
    fi

    echo $repo_status
}
rvm_status () {
	echo "$(~/.rvm/bin/rvm-prompt)"
}
timestamp () {
  echo "%*"
}

zle_mode () {
    echo "$ZLE_MODE"
}

function zle-line-init zle-keymap-select {
    case $KEYMAP in
        vicmd) ZLE_MODE="COMMAND";; 
        main) ZLE_MODE="";; # Should be using viins instead of main, but this works for now
    esac
    zle reset-prompt
}

ZLE_MODE=""
zle -N zle-line-init
zle -N zle-keymap-select

init_prompt
